version: '3.9'

x-airflow-common:
  &airflow-common
  image: egr_airflow:1.0
  volumes:
    - ./../airflow-data/dags:/opt/airflow/dags
    - ./../airflow-data/plugins:/opt/airflow/plugins
    - logs-volume:/opt/airflow/logs
  depends_on:
    - postgres
  env_file:
    - airflow-env
  restart: always
#  healthcheck:
#    test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#    interval: 10s
#    timeout: 5s
#    retries: 3

services:

  airflow-scheduler:
    command: scheduler
    <<: *airflow-common

  airflow-webserver:
    command: webserver
    ports:
      - "8080:8080"
    <<: *airflow-common
    depends_on:
      - airflow-scheduler
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]" ]
      interval: 10s
      timeout: 30s
      retries: 5

  airflow-worker1:
    command: celery worker
    <<: *airflow-common
    depends_on:
      - airflow-scheduler
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /opt/airflow/airflow-worker.pid ]" ]
      interval: 10s
      timeout: 30s
      retries: 5

  airflow-worker2:
    command: celery worker
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /opt/airflow/airflow-worker.pid ]" ]
      interval: 10s
      timeout: 30s
      retries: 5
    <<: *airflow-common

  airflow-worker3:
    command: celery worker
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /opt/airflow/airflow-worker.pid ]" ]
      interval: 10s
      timeout: 30s
      retries: 5
    <<: *airflow-common

  airflow-flower:
    command: celery flower
    ports:
      - "5555:5555"
    <<: *airflow-common

  postgres:
    image: postgres:14.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      #      - POSTGRES_USER_FILE=/run/secrets/pg_user
      #      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_password
      - POSTGRES_DB=airflow
      - POSTGRES_PORT=5432
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    #    secrets:
    #      - pg_user
    #      - pg_password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 30s
      retries: 5

  redis:
    image: redis:7.0
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 5


volumes:
  postgres-data:
  logs-volume:

secrets:
  pg_user:
    file: c:/temp/secrets/airflow/PG_USER.txt
  pg_password:
    file: c:/temp/secrets/airflow/PG_PASSWORD.txt
